% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_openai_completions.R
\name{api_openai_chat_completions}
\alias{api_openai_chat_completions}
\title{Fetch Chat Completions from OpenAI API with JSON Validation}
\usage{
api_openai_chat_completions(
  model = "gpt-3.5-turbo",
  messages = NULL,
  temperature = 1,
  top_p = 1,
  n = 1,
  stream = FALSE,
  stop = NULL,
  max_tokens = NULL,
  presence_penalty = 0,
  frequency_penalty = 0,
  logit_bias = NULL,
  user = NULL,
  openai_api_key = Sys.getenv("OPENAI_API_KEY"),
  openai_organization = NULL,
  is_json_output = TRUE
)
}
\arguments{
\item{model}{The model to use, defaults to 'gpt-3.5-turbo'.}

\item{messages}{A list of messages to send to the API.}

\item{temperature}{Controls randomness in generation, default 1.}

\item{top_p}{Controls diversity of generation, default 1.}

\item{n}{Number of completions to generate, default 1.}

\item{stream}{If TRUE, returns a stream of responses, default FALSE.}

\item{stop}{Sequence of tokens which will automatically complete generation.}

\item{max_tokens}{The maximum number of tokens to generate, NULL for no limit.}

\item{presence_penalty}{Alters likelihood of new topics, default 0.}

\item{frequency_penalty}{Alters likelihood of repeated topics, default 0.}

\item{logit_bias}{A named list of biases to apply to token logits.}

\item{user}{An identifier for the user, if applicable.}

\item{openai_api_key}{The API key for OpenAI, defaults to the environment variable OPENAI_API_KEY.}

\item{openai_organization}{Optional organization identifier for the API.}

\item{is_json_output}{If TRUE, ensures output is valid JSON, default TRUE.}
}
\value{
Returns a string with the API response, or JSON if is_json_output is TRUE.
}
\description{
Interacts with the OpenAI API to obtain chat completions based on the GPT model. The function
supports various customization parameters for the request. Additionally, it includes
functionality to re-call the API if the returned 'message.content' is not properly
formed JSON, ensuring more robust API interaction.
}
\examples{
\dontrun{
api_openai_chat_completions(
   model = "gpt-3.5-turbo",
   messages = list(
       list(
           "role" = "system",
           "content" = "You are an expert at life."
       ),
       list(
           "role" = "user",
           "content" = "Where is the party at?"
       )
   )
)
}



}
